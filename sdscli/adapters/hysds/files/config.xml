<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>14</daysToKeep>
        <numToKeep>14</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.18.2">
      <projectUrl>{{ PROJECT_URL }}</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.4">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/tags/*:refs/remotes/origin/tags/*</refspec>
        <url>{{ PROJECT_URL }}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>{{ BRANCH_SPEC }}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.cloudbees.jenkins.GitHubPushTrigger plugin="github@1.18.2">
      <spec></spec>
    </com.cloudbees.jenkins.GitHubPushTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
source {{ OPS_HOME }}/verdi/bin/activate
#Get the tag from the end of the GIT_BRANCH
TAG=&quot;${GIT_BRANCH##*/}&quot;
#Get repo path by removing http://*/ and .git from GIT_URL
REPO=&quot;${GIT_URL#*://*/}&quot;
REPO=&quot;${REPO%.git}&quot;
REPO=&quot;${REPO//\//_}&quot;
STORAGE=&quot;{{ STORAGE_URL }}&quot;
export GIT_OAUTH_TOKEN=&quot;{{ GIT_OAUTH_TOKEN }}&quot;
export MOZART_REST_URL=&quot;http://{{ MOZART_PVT_IP }}:8888/api/v0.1&quot;
export GRQ_REST_URL=&quot;http://{{ GRQ_PVT_IP }}:{{ GRQ_PORT }}/api/v0.1&quot;
export CONTAINER_REGISTRY=&quot;{{ CONTAINER_REGISTRY }}&quot;
export CONTAINER_REGISTRY_BUCKET=&quot;{{ CONTAINER_REGISTRY_BUCKET }}&quot;
export SKIP_PUBLISH=&quot;{{ SKIP_PUBLISH }}&quot;

if [ -z "$SKIP_PUBLISH" ]
then 
  export SKIP_PUBLISH=&quot;noskip&quot;
fi

# exit on any error
set -ex

# build image
if [ ! -z "$CONTAINER_REGISTRY" -a ! -z "$CONTAINER_REGISTRY_BUCKET" ]
then
  {{ OPS_HOME }}/verdi/ops/container-builder/build-container.bash \
  ${REPO} ${TAG} ${STORAGE} ${MOZART_REST_URL} ${GRQ_REST_URL} ${SKIP_PUBLISH} ${CONTAINER_REGISTRY}
else
  {{ OPS_HOME }}/verdi/ops/container-builder/build-container.bash \
  ${REPO} ${TAG} ${STORAGE} ${MOZART_REST_URL} ${GRQ_REST_URL} ${SKIP_PUBLISH} ""
fi

if [ -f "./docker/extract_artifacts.sh" ]; then
  # extract artifacts
  IMAGE=&quot;container-${REPO,,}&quot;
  ./docker/extract_artifacts.sh ${IMAGE}:${TAG,,}
fi
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
